C  ****  Files included to simplify compilation.
      INCLUDE 'penelope.f'
      INCLUDE 'rita.f'

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                      C
C           TTTTTT    AA    BBBBB   L       EEEEEE   SSSS              C
C             TT     A  A   B    B  L       E       S    S             C
C             TT    A    A  B    B  L       E       SS                 C
C             TT    AAAAAA  BBBBB   L       EEEE      SSSS             C
C             TT    A    A  B    B  L       E       S    S             C
C             TT    A    A  BBBBB   LLLLLL  EEEEEE   SSSS              C
C                                                                      C
C                                                   (version 2014).    C
C                                                                      C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                      C
C  PENELOPE/PENGEOM (version 2014)                                     C
C  Copyright (c) 2001-2014                                             C
C  Universitat de Barcelona                                            C
C                                                                      C
C  Permission to use, copy, modify, distribute and sell this software  C
C  and its documentation for any purpose is hereby granted without     C
C  fee, provided that the above copyright notice appears in all        C
C  copies and that both that copyright notice and this permission      C
C  notice appear in all supporting documentation. The Universitat de   C
C  Barcelona makes no representations about the suitability of this    C
C  software for any purpose. It is provided 'as is' without express    C
C  or implied warranty.                                                C
C                                                                      C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  This program gives interpolated values of total cross sections, mean
C  free paths and ranges of particles in a material. It also generates
C  detailed tables of these and other transport quantities as functions
C  of the particle energy. These tables are written in the output file
C  TABLES.DAT and in a number of separate files with the extension
C  '.TAB', in a format suited for plotting.
C
C  TABLES reads material properties and cross sections from a material-
C  data file, which normally is generated by running the code MATERIAL.
C  If the material file is not found in the working directory, the user
C  is asked to provide the composition and mass density of the material,
C  and the material-data file is generated by TABLES.
C
C  ****  Code number (ICOL) for the various interaction events:
C
C     +----+-----------------+-----------------+-----------------+
C     |ICOL|electron (KPAR=1)|photon (KPAR=2)  |positron (KPAR=3)|
C     +----+-----------------+-----------------+-----------------+
C     | 1  |hinge            |Rayleigh         |hinge            |
C     +----+-----------------+-----------------+-----------------+
C     | 2  |elastic          |Compton          |elastic          |
C     +----+-----------------+-----------------+-----------------+
C     | 3  |inelastic        |photoabsorption  |inelastic        |
C     +----+-----------------+-----------------+-----------------+
C     | 4  |bremsstrahlung   |pair production  |bremsstrahlung   |
C     +----+-----------------+-----------------+-----------------+
C     | 5  |inner-shell ion. |not defined      |inner-shell ion. |
C     +----+-----------------+-----------------+-----------------+
C     | 6  |not defined      |not defined      |annihilation     |
C     +----+-----------------+-----------------+-----------------+
C     | 7  |delta scattering |delta scattering |delta scattering |
C     +----+-----------------+-----------------+-----------------+
C     | 8  |not defined      |not defined      |not defined      |
C     +----+-----------------+-----------------+-----------------+
C
C
C  *********************************************************************
C                       MAIN PROGRAM
C  *********************************************************************
      USE PENELOPE_mod
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z), INTEGER*4 (I-N)
      CHARACTER MFNAME*20,PMFILE*20
      CHARACTER*24 STR(3,6)
      DIMENSION PMFILE(MAXMAT)
C  ****  Composition data.
      COMMON/COMPOS/STF(MAXMAT,30),ZT(MAXMAT),AT(MAXMAT),RHO(MAXMAT),
     1  VMOL(MAXMAT),IZ(MAXMAT,30),NELEM(MAXMAT)
C
      STR(1,1)='not an interaction   (?)'
      STR(1,2)='elastic scattering      '
      STR(1,3)='inelastic scattering    '
      STR(1,4)='bremsstrahlung emission '
      STR(1,5)='inner-shell ionization  '
      STR(1,6)='not an interaction   (?)'
C
      STR(2,1)='Rayleigh scattering     '
      STR(2,2)='Compton scattering      '
      STR(2,3)='photoelectric absorption'
      STR(2,4)='pair production         '
      STR(2,5)='not an interaction   (?)'
      STR(2,6)='not an interaction   (?)'
C
      STR(3,1)='not an interaction   (?)'
      STR(3,2)='elastic scattering      '
      STR(3,3)='inelastic scattering    '
      STR(3,4)='bremsstrahlung emission '
      STR(3,5)='inner-shell ionization  '
      STR(3,6)='annihilation            '
C
C  ****  Material data file.
C
      WRITE(6,*) '  '
      WRITE(6,*) 'Enter the name of the material data file...'
      READ(5,'(A20)') MFNAME
      WRITE(6,'('' Material data file:  '', A24)') MFNAME
C
      OPEN(9,FILE=MFNAME,STATUS='OLD',IOSTAT=KODE)
      IF(KODE.NE.0) THEN
        WRITE(6,*) '  '
        WRITE(6,'('' '',70(''+''))')
        WRITE(6,'('' *** This material file does not exist.'')')
        WRITE(6,'(''     PENELOPE is going to generate it. '')')
        WRITE(6,'(''     Please, enter material data as prompted...'')')
        WRITE(6,*) '  '
        CALL PEMATW(1,MFNAME)
        WRITE(6,*) '  '
        WRITE(6,'('' *** PENELOPE has generated the file '',A20)')
     1    MFNAME
        WRITE(6,'('' '',70(''+''))')
        WRITE(6,*) '  '
      ENDIF
      CLOSE(9)
C
C  ****  Parameters (to tabulate the complete energy range and to switch
C        soft interactions off).
C
      EMAX=1.0D9
      DO M=1,MAXMAT
        EABS(1,M)=50.0D0
        EABS(2,M)=50.0D0
        EABS(3,M)=50.0D0
        C1(M)=0.0D0
        C2(M)=0.0D0
        WCC(M)=0.0D0
        WCR(M)=-10.0D0
      ENDDO
C
C  ****  We start by initialising PENELOPE...
C
      NMATR=1
      INFO=3
      PMFILE(1)=MFNAME
      WRITE(6,*) '  '
      WRITE(6,*) 'Processing material data. Please, wait...'
      OPEN(26,FILE='tables.dat')
      CALL PEINIT(EMAX,NMATR,26,INFO,PMFILE)
      CLOSE(26)
      M=1
      CALL GTABL(MFNAME)
      CALL EPTABL(MFNAME)
      WCCM=1.0D4
      CALL EPRSTP(WCCM,MFNAME)
C
      WRITE(6,*) '  '
      WRITE(6,*) 'The output file ''tables.dat'' has been generated.'
C
  100 CONTINUE
      WRITE(6,*) '  '
      WRITE(6,*) 'To continue, select one option:'
      WRITE(6,*) '   1: Calculate electron and positron ranges,'
      WRITE(6,*) '   2: Calculate mean free paths,'
      WRITE(6,*) '   3: Calculate restricted stopping powers,'
      WRITE(6,*) '   4: Exit the program.'
      READ(5,*) IOPT
      IF(IOPT.EQ.1) THEN
        GO TO 110
      ELSE IF(IOPT.EQ.2) THEN
        GO TO 120
      ELSE IF(IOPT.EQ.3) THEN
        GO TO 130
      ELSE
        STOP
      ENDIF
C
C  ************  Ranges.
C
  110 CONTINUE
      WRITE(6,*) '  '
      WRITE(6,*) 'Enter KPAR, E ...'
      READ(5,*,ERR=100) KPAR,E
      IF(E.LT.50.0D0.OR.E.GT.EMAX) THEN
        WRITE(6,*) '   Energy outside the allowed interval...'
        WRITE(6,*) '  '
        GO TO 100
      ELSE IF(KPAR.NE.1.AND.KPAR.NE.3) THEN
        WRITE(6,*) '   Incorrect KPAR value...'
        WRITE(6,*) '  '
        GO TO 100
      ENDIF
      IF(KPAR.EQ.3) THEN
        WRITE(6,1201) E
 1201   FORMAT(/1X,'Positron.    E =',1P,E11.4,' eV')
        RANGE=PRANGE(E,KPAR,M)
        WRITE(6,1202) RANGE,RANGE*RHO(1)
 1202   FORMAT(1X,'         range =',1P,E11.4,' cm ',
     1        /1X,'               =',E11.4,' g/cm**2')
      ELSE IF(KPAR.EQ.2) THEN
        WRITE(6,1203) E
 1203   FORMAT(/1X,'Photon.        E =',1P,E11.4,' eV')
        RANGE=PRANGE(E,KPAR,M)
        WRITE(6,1204) RANGE,RANGE*RHO(1)
 1204   FORMAT(1X,'  mean free path =',1P,E11.4,' cm ',
     1        /1X,'                 =',E11.4,' g/cm**2')
        RMU=1.0D0/RANGE
        WRITE(6,1205) RMU,RMU/RHO(1)
 1205   FORMAT(1X,'     att. coeff. =',1P,E11.4,' 1/cm ',
     1        /1X,'mass att. coeff. =',E11.4,' cm**2/g')
      ELSE
        KPAR=1
        WRITE(6,1206) E
 1206   FORMAT(/1X,'Electron.    E =',1P,E11.4,' eV')
        RANGE=PRANGE(E,KPAR,M)
        WRITE(6,1207) RANGE,RANGE*RHO(1)
 1207   FORMAT(1X,'         range =',1P,E11.4,' cm ',
     1        /1X,'               =',E11.4,' g/cm**2')
      ENDIF
      GO TO 110
C
C  ************  Mean free paths.
C
  120 CONTINUE
      WRITE(6,*) '  '
      WRITE(6,*) 'Enter KPAR, E, ICOL ...'
      READ(5,*,ERR=100) KPAR,E,ICOL
      IF(E.LT.50.0D0.OR.E.GT.EMAX) THEN
        WRITE(6,*) '   Energy outside the allowed interval...'
        WRITE(6,*) '  '
        GO TO 100
      ELSE IF(KPAR.LT.1.OR.KPAR.GT.3) THEN
        WRITE(6,*) '   Incorrect KPAR value...'
        WRITE(6,*) '  '
        GO TO 100
      ELSE IF(ICOL.LT.1.OR.ICOL.GT.6) THEN
        WRITE(6,*) '   ICOL out of range...'
        WRITE(6,*) '  '
        GO TO 100
      ENDIF
      IF(ICOL.GT.6) ICOL=1
      IF(KPAR.EQ.3) THEN
        WRITE(6,1301) E,STR(KPAR,ICOL)
 1301   FORMAT(/1X,'Positron.    E =',1P,E11.4,' eV.',5X,A24)
      ELSE IF(KPAR.EQ.2) THEN
        WRITE(6,1302) E,STR(KPAR,ICOL)
 1302   FORMAT(/1X,'Photon.      E =',1P,E11.4,' eV.',5X,A24)
      ELSE
        KPAR=1
        WRITE(6,1303) E,STR(KPAR,ICOL)
 1303   FORMAT(/1X,'Electron.    E =',1P,E11.4,' eV.',5X,A24)
      ENDIF
C
      CMFP=PHMFP(E,KPAR,M,ICOL)
      WRITE(6,1304) CMFP,CMFP*RHO(1)
 1304 FORMAT(1X,'mean free path =',1P,E11.4,' cm',
     1      /1X,'               =',E11.4,' g/cm**2')
      WRITE(6,1305) 1.0D0/CMFP,1.0D0/(CMFP*RHO(1))
 1305 FORMAT(1X,'   inverse mfp =',1P,E11.4,' 1/cm',
     1      /1X,'               =',E11.4,' cm**2/g')
      XS=(1.0D0/CMFP)/VMOL(1)
      WRITE(6,1306) XS
 1306 FORMAT(1X,' cross section =',1P,E11.4,' cm**2')
      IF(KPAR.NE.2) THEN
        DNUM=AVNCOL(E,KPAR,M,ICOL)
        WRITE(6,1307) DNUM
 1307   FORMAT(1X,' no. of events =',1P,E11.4,' per history')
      ENDIF
      GO TO 120
C
C  ************  Restricted collision stopping power.
C
  130 CONTINUE
      WRITE(6,*) '  '
      WRITE(6,*) 'Enter the cutoff energy loss, Wcc ...'
      READ(5,*) WCCM
      IF(WCCM.LT.100.0D0) THEN
        WRITE(6,'(1X,''Wcc ='',1P,E12.5,'' eV'')') WCCM
        WRITE(6,*) 'Wcc has to be larger than 100 eV.'
        GO TO 100
      ENDIF
      CALL EPRSTP(WCCM,MFNAME)
      WRITE(6,*) '  '
      GO TO 100
C
      END

C  *********************************************************************
C                       SUBROUTINE GTABL
C  *********************************************************************
      SUBROUTINE GTABL(MFNAME)
C
C  This subroutine prints tables of interaction properties of photons.
C
      USE PENELOPE_mod
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z), INTEGER*4 (I-N)
      CHARACTER*20 MFNAME
C  ****  Energy grid and interpolation constants for the current energy.
      COMMON/CEGRID/EMIN,EL,EU,ET(NEGP),DLEMP(NEGP),DLEMP1,DLFC,
     1  XEL,XE,XEK,KE
C  ****  Composition data.
      COMMON/COMPOS/STF(MAXMAT,30),ZT(MAXMAT),AT(MAXMAT),RHO(MAXMAT),
     1  VMOL(MAXMAT),IZ(MAXMAT,30),NELEM(MAXMAT)
C  ****  Photon simulation tables.
      COMMON/CGIMFP/SGRA(MAXMAT,NEGP),SGCO(MAXMAT,NEGP),
     1  SGPH(MAXMAT,NEGP),SGPP(MAXMAT,NEGP),SGAUX(MAXMAT,NEGP)
C  ****  Rayleigh scattering.
      PARAMETER (NQ=250,NEX=1024)
      COMMON/CGRA01/FF(MAXMAT,NQ),ERA(NEX),XSRA(MAXMAT,NEX),
     1    IED(NEGP),IEU(NEGP),NE
C  ****  Photoelectric cross sections.
      PARAMETER (NTP=12000)
      COMMON/CGPH00/EPH(NTP),XPH(NTP,17),IPHF(99),IPHL(99),NPHS(99),NCUR
C  ****  Pair and triplet production.
      COMMON/CGPP01/TRIP(MAXMAT,NEGP)
C
      PARAMETER (NDIM=12000)
      DIMENSION ER(NDIM),XSR(NDIM),X1(NDIM),Y1(NDIM),X2(NDIM),Y2(NDIM)
C
      M=1
C
      OPEN(11,FILE='MACgRA.tab')
      WRITE(11,1000) MFNAME
 1000 FORMAT(1X,'# Material data file: ',A20,/1X,'# ')
      WRITE(11,1601)
 1601 FORMAT(1X,'# PENELOPE >>>  Rayleigh scattering x-section, ',
     1  'mac and mfp.',/1X,'#')
      WRITE(11,1602)
 1602 FORMAT(1X,'#   Energy',8X,'xs_Ra',7X,'mac_Ra',7X,'mfp_Ra',
     1  /1X,'#    (eV)',8X,'(cm**2)',5X,'(cm**2/g)',4X,'(g/cm**2)',
     1  /1X,'#',52('-'))
      DO IE=1,NE
        VAL=EXP(XSRA(M,IE))
        WRITE(11,'(1X,1P,4E13.5)') EXP(ERA(IE)),VAL/VMOL(M),VAL/RHO(M),
     1    RHO(M)/VAL
      ENDDO
      CLOSE(11)
C
      OPEN(12,FILE='TCSg.tab')
      WRITE(12,1000) MFNAME
      WRITE(12,1201)
 1201 FORMAT(1X,'# PENELOPE >>>  Photon cross sections (xs).')
      WRITE(12,1202)
 1202 FORMAT(1X,'#',/1X,'#   Energy',8X,'xs_Ra',8X,'xs_Co',8X,'xs_ph',
     1  8X,'xs_pp',7X,'xs_trip',6X,'xs_tot',/1X,'#    (eV) ',7X,
     1  '(cm**2)',6X,'(cm**2)',6X,'(cm**2)',6X,'(cm**2)',6X,'(cm**2)',
     1  6X,'(cm**2)',/1X,'#',91('-'))
C
      OPEN(13,FILE='MACg.tab')
      WRITE(13,1000) MFNAME
      WRITE(13,1301)
 1301 FORMAT(1X,'# PENELOPE >>>  Photon mass attenuation coefficie',
     1  'nts (mac).',/1X,'# ')
      WRITE(13,1302)
 1302 FORMAT(1X,'#   Energy',7X,'mac_Ra',7X,'mac_Co',7X,
     1   'mac_ph',7X,'mac_pp',7X,'mac_tot',/1X,'#    (eV) ',6X,
     2  '(cm**2/g)',4X,'(cm**2/g)',4X,'(cm**2/g)',4X,'(cm**2/g)',4X,
     3  '(cm**2/g)',/1X,'#',78('-'))
C
      OPEN(14,FILE='MFPg.tab')
      WRITE(14,1000) MFNAME
      WRITE(14,1401)
 1401 FORMAT(1X,'# PENELOPE >>>  Photon mean free paths (mfp).')
      WRITE(14,1402)
 1402 FORMAT(1X,'#',/1X,'#   Energy',7X,'mfp_Ra',7X,'mfp_Co',7X,
     1   'mfp_ph',7X,'mfp_pp',7X,'mfp_tot',/1X,'#    (eV) ',6X,
     2  '(g/cm**2)',4X,'(g/cm**2)',4X,'(g/cm**2)',4X,'(g/cm**2)',4X,
     3  '(g/cm**2)',/1X,'#',78('-'))
C
      IZZ=IZ(M,1)
      IST=IPHF(IZZ)
      LST=IPHL(IZZ)
      NPHD=0
      DO I=IST,LST
        NPHD=NPHD+1
        ER(NPHD)=EXP(EPH(I))
        XSR(NPHD)=STF(M,1)*EXP(XPH(I,1))
      ENDDO
      IF(NELEM(M).GT.1) THEN
        DO IEL=2,NELEM(M)
          N1=NPHD
          DO I=1,N1
            X1(I)=ER(I)
            Y1(I)=XSR(I)
          ENDDO
          IZZ=IZ(M,IEL)
          IST=IPHF(IZZ)
          LST=IPHL(IZZ)
          N2=0
          DO I=IST,LST
            N2=N2+1
            X2(N2)=EXP(EPH(I))
            Y2(N2)=STF(M,IEL)*EXP(XPH(I,1))
          ENDDO
          CALL MERGE2(X1,Y1,X2,Y2,ER,XSR,N1,N2,NPHD)
        ENDDO
      ENDIF
      DO I=1,NPHD
        E=ER(I)
        IF(ABS(ER(I)-ER(I+1)).LT.1.0D-6*ER(I)) THEN
          E=E-1.0D-6
        ELSE IF(I.GT.1) THEN
          IF(ABS(ER(I)-ER(I-1)).LT.1.0D-6*ER(I)) E=E+1.0D-6
        ENDIF
        XEL=LOG(E)
        XE=1.0D0+(XEL-DLEMP1)*DLFC
        KE=XE
        XEK=XE-KE
C  ****  Binary search.
        II=IED(KE)
        IU=IEU(KE)
    1   IT=(II+IU)/2
        IF(XEL.GT.ERA(IT)) THEN
          II=IT
        ELSE
          IU=IT
        ENDIF
        IF(IU-II.GT.1) GO TO 1
        XTRA=EXP(XSRA(M,II)+(XSRA(M,II+1)-XSRA(M,II))*(XEL-ERA(II))
     1      /(ERA(II+1)-ERA(II)))/VMOL(M)
        RFPRA=XTRA*VMOL(M)/RHO(M)
        FPRA=1.0D0/RFPRA
        IF(KE.GT.0.AND.KE.LT.NEGP) THEN
          XSCO=EXP(SGCO(M,KE)+(SGCO(M,KE+1)-SGCO(M,KE))*XEK)/VMOL(M)
        ELSE
          CALL GCOaT(E,XSCO,M)
        ENDIF
        XSCO=MAX(XSCO,1.0D-35)
        RFPCO=XSCO*VMOL(M)/RHO(M)
        FPCO=1.0D0/RFPCO
        RFPPH=XSR(I)*VMOL(M)/RHO(M)
        FPPH=1.0D0/RFPPH
        IF(E.LT.1.023D6) THEN
          TXSPP=1.0D-35
          XSPPT=1.0D-35
          XSPP=1.0D-35
          RFPPP=1.0D-35
          FPPP=1.0D35
        ELSE
          TXSPP=EXP(SGPP(M,KE)+(SGPP(M,KE+1)-SGPP(M,KE))*XEK)/VMOL(M)
          PTRIP=TRIP(M,KE)+(TRIP(M,KE+1)-TRIP(M,KE))*XEK
          IF(PTRIP.GT.1.0D-10) THEN
            XSPPT=TXSPP*PTRIP
            XSPP=TXSPP*(1.0D0-PTRIP)
          ELSE
            XSPPT=1.0D-35
            XSPP=TXSPP
          ENDIF
          RFPPP=TXSPP*VMOL(M)/RHO(M)
          FPPP=1.0D0/RFPPP
        ENDIF
        XST=XTRA+XSCO+XSR(I)+TXSPP
        RFPT=XST*VMOL(M)/RHO(M)
        FPT=1.0D0/RFPT
        WRITE(12,'(1X,1P,7E13.5)') E,XTRA,XSCO,XSR(I),XSPP,XSPPT,XST
        WRITE(13,'(1X,1P,6E13.5)') E,RFPRA,RFPCO,RFPPH,RFPPP,RFPT
        WRITE(14,'(1X,1P,6E13.5)') E,FPRA,FPCO,FPPH,FPPP,FPT
      ENDDO
      CLOSE(12)
      CLOSE(13)
      CLOSE(14)
C
      RETURN
      END

C  *********************************************************************
C                       SUBROUTINE EPTABL
C  *********************************************************************
      SUBROUTINE EPTABL(MFNAME)
C
C  This subroutine prints tables of interaction properties of electrons
C  and positrons.
C
      USE PENELOPE_mod
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z), INTEGER*4 (I-N)
      CHARACTER*20 MFNAME
      CHARACTER*2 LASYMB
C
      PARAMETER (REV=5.10998928D5)  ! Electron rest energy (eV)
      PARAMETER (SLCM=2.99792458D10)  ! Speed of light (cm/s)
      PARAMETER (TREV=2.0D0*REV)
      DIMENSION F1(NEGP),TAUE(NEGP),TAUP(NEGP)
C  ****  Energy grid and interpolation constants for the current energy.
      COMMON/CEGRID/EMIN,EL,EU,ET(NEGP),DLEMP(NEGP),DLEMP1,DLFC,
     1  XEL,XE,XEK,KE
C  ****  Composition data.
      COMMON/COMPOS/STF(MAXMAT,30),ZT(MAXMAT),AT(MAXMAT),RHO(MAXMAT),
     1  VMOL(MAXMAT),IZ(MAXMAT,30),NELEM(MAXMAT)
C  ****  Element data.
      COMMON/CADATA/ATW(99),EPX(99),RSCR(99),ETA(99),EB(99,30),
     1  ALW(99,30),CP0(99,30),IFI(99,30),IKS(99,30),NSHT(99),LASYMB(99)
C
C  ****  Electron simulation tables.
      COMMON/CEIMFP/SEHEL(MAXMAT,NEGP),SEHIN(MAXMAT,NEGP),
     1  SEISI(MAXMAT,NEGP),SEHBR(MAXMAT,NEGP),SEAUX(MAXMAT,NEGP),
     2  SETOT(MAXMAT,NEGP),CSTPE(MAXMAT,NEGP),RSTPE(MAXMAT,NEGP),
     3  DEL(MAXMAT,NEGP),W1E(MAXMAT,NEGP),W2E(MAXMAT,NEGP),
     4  DW1EL(MAXMAT,NEGP),DW2EL(MAXMAT,NEGP),
     5  RNDCE(MAXMAT,NEGP),AE(MAXMAT,NEGP),BE(MAXMAT,NEGP),
     6  T1E(MAXMAT,NEGP),T2E(MAXMAT,NEGP)
      COMMON/CLAS1E/TSTPE(MAXMAT,NEGP),TSTRE(MAXMAT,NEGP),
     1  TRL1E(MAXMAT,NEGP),TRL2E(MAXMAT,NEGP)
C  ****  Positron simulation tables.
      COMMON/CPIMFP/SPHEL(MAXMAT,NEGP),SPHIN(MAXMAT,NEGP),
     1  SPISI(MAXMAT,NEGP),SPHBR(MAXMAT,NEGP),SPAN(MAXMAT,NEGP),
     2  SPAUX(MAXMAT,NEGP),SPTOT(MAXMAT,NEGP),CSTPP(MAXMAT,NEGP),
     3  RSTPP(MAXMAT,NEGP),W1P(MAXMAT,NEGP),W2P(MAXMAT,NEGP),
     4  DW1PL(MAXMAT,NEGP),DW2PL(MAXMAT,NEGP),
     5  RNDCP(MAXMAT,NEGP),AP(MAXMAT,NEGP),BP(MAXMAT,NEGP),
     6  T1P(MAXMAT,NEGP),T2P(MAXMAT,NEGP)
      COMMON/CLAS1P/TSTPP(MAXMAT,NEGP),TSTRP(MAXMAT,NEGP),
     1  TRL1P(MAXMAT,NEGP),TRL2P(MAXMAT,NEGP)
C  ****  Total and transport cross sections.
      COMMON/CEEL00/EIT(NEGP),XE0(NEGP),XE1(NEGP),XE2(NEGP),XP0(NEGP),
     1  XP1(NEGP),XP2(NEGP),T1E0(NEGP),T2E0(NEGP),T1P0(NEGP),T2P0(NEGP),
     2  EITL(NEGP),FL(NEGP),A(NEGP),B(NEGP),C(NEGP),D(NEGP)
C  ****  E/P inelastic collisions.
      PARAMETER (NO=512)
      COMMON/CEIN/EXPOT(MAXMAT),OP2(MAXMAT),F(MAXMAT,NO),UI(MAXMAT,NO),
     1  WRI(MAXMAT,NO),KZ(MAXMAT,NO),KS(MAXMAT,NO),NOSC(MAXMAT)
C  ****  Partial cross sections of individual shells/oscillators.
      COMMON/CEIN00/SEH0(NO),SEH1(NO),SEH2(NO),SES0(NO),SES1(NO),
     1              SES2(NO),SET0(NO),SET1(NO),SET2(NO)
      COMMON/CPIN00/SPH0(NO),SPH1(NO),SPH2(NO),SPS0(NO),SPS1(NO),
     1              SPS2(NO),SPT0(NO),SPT1(NO),SPT2(NO)
C  ****  Electron inelastic coll. and inner-shell ionization tables.
      COMMON/CEINAC/EINAC(MAXMAT,NEGP,NO),IEIN(MAXMAT,NO),NEIN(MAXMAT)
      COMMON/CESIAC/ESIAC(MAXMAT,NEGP,NO),IESI(MAXMAT,NO),NESI(MAXMAT)
      COMMON/CESIN/XSEIN(NEGP,NO),XSESI(NEGP,NO),ISIE(NO)
C  ****  Positron inelastic coll. and inner-shell ionization tables.
      COMMON/CPINAC/PINAC(MAXMAT,NEGP,NO),IPIN(MAXMAT,NO),NPIN(MAXMAT)
      COMMON/CPSIAC/PSIAC(MAXMAT,NEGP,NO),IPSI(MAXMAT,NO),NPSI(MAXMAT)
      COMMON/CPSIN/XSPIN(NEGP,NO),XSPSI(NEGP,NO),ISIP(NO)
C
      DIMENSION ETS(500),ERADY(500),PRADY(500)
C
      PARAMETER (NEGRD=51)
      DIMENSION EGRD(NEGRD)
      DATA EGRD/  1.00E+00, 1.05E+00, 1.10E+00, 1.15E+00, 1.20E+00,
     1  1.25E+00, 1.30E+00, 1.35E+00, 1.40E+00, 1.50E+00, 1.60E+00,
     1  1.70E+00, 1.80E+00, 1.90E+00, 2.00E+00, 2.10E+00, 2.20E+00,
     1  2.30E+00, 2.40E+00, 2.50E+00, 2.60E+00, 2.70E+00, 2.80E+00,
     1  2.90E+00, 3.00E+00, 3.20E+00, 3.40E+00, 3.60E+00, 3.80E+00,
     1  4.00E+00, 4.20E+00, 4.40E+00, 4.60E+00, 4.80E+00, 5.00E+00,
     1  5.25E+00, 5.50E+00, 5.75E+00, 6.00E+00, 6.25E+00, 6.50E+00,
     1  6.75E+00, 7.00E+00, 7.25E+00, 7.50E+00, 7.75E+00, 8.00E+00,
     1  8.50E+00, 9.00E+00, 9.50E+00, 1.00E+01/
C
      M=1
C
C  ****  Energy mesh points (in eV).
C
      NIE=0
      IGRID=34
      FGRID=10.0D0
   10 IGRID=IGRID+1
      EV=EGRD(IGRID)*FGRID
      IF(IGRID.EQ.NEGRD) THEN
        IGRID=1
        FGRID=10.0D0*FGRID
      ENDIF
      NIE=NIE+1
      ETS(NIE)=EV
      IF(EV.LT.0.9999D9) GO TO 10
C
C  ************  Electrons.
C
      OPEN(11,FILE='TCSe.tab')
      WRITE(11,1000) MFNAME
 1000 FORMAT(1X,'# Material data file: ',A20,/1x,'#')
      WRITE(11,1101)
 1101 FORMAT(1X,'# PENELOPE >>>  Electron cross sections (xs).',/1X,'#',
     1  /1X,'# NOTE: The xs for inner shell ionization (isi) is listed',
     2  ' only for',/1X,'#',7X,'completeness. The xs for inelastic',
     3  ' collisions (in) has been',/1X,'#',7X,'calculated by',
     4  ' considering all inelastic events, including isi.',
     5  /1X,'#',7X,'The bremss (br) xs is for emission of photons with',
     6  ' W >10 eV.')
      WRITE(11,1102)
 1102 FORMAT(1X,'#',/1X,'#   Energy',8X,'xs_el',8X,'xs_in',8X,'xs_br',
     1  7X,'xs_tot',7X,'xs_isi',/1X,'#    (eV) ',7X,'(cm**2)',6X,
     2  '(cm**2)',6X,'(cm**2)',6X,'(cm**2)',6X,'(cm**2)',/1X,'#',
     3  78('-'))
C
      OPEN(12,FILE='MFPe.tab')
      WRITE(12,1000) MFNAME
      WRITE(12,1201)
 1201 FORMAT(1X,'# PENELOPE >>>  Electron mean free paths (mfp).',
     1  /1X,'#',/1X,'# NOTE: The mfp for inner shell ionization (isi)',
     2  ' is listed only for',/1X,'#',7X,'completeness. The mfp for ',
     3  'inelastic collisions (in) has been',/1X,'#',7X,'calculated by',
     4  ' considering all inelastic events, including isi.',
     5  /1X,'#',7X,'The bremss (br) mfp is for emission of photons',
     6  ' with W >10 eV.')
      WRITE(12,1202)
 1202 FORMAT(1X,'#',/1X,'#   Energy',7X,'mfp_el',7X,'mfp_in',7X,
     1  'mfp_br',7X,'mfp_tot',6X,'mfp_isi',/1X,'#    (eV) ',6X,
     2  '(g/cm**2)',4X,'(g/cm**2)',4X,'(g/cm**2)',4X,'(g/cm**2)',4X,
     3  '(g/cm**2)',/1X,'#',78('-'))
C
      OPEN(13,FILE='STPe.tab')
      WRITE(13,1000) MFNAME
      WRITE(13,1301)
 1301 FORMAT(1X,'# PENELOPE >>>  Electron mass stopping power (stp)',
     1  ' and energy straggling (str).',/1X,'# ')
      WRITE(13,1302)
 1302 FORMAT(1X,'# 1 mtu = 1 g/cm**2',/1X,'# ',/1X,'#   Energy',7X,
     1  'stp_col',6X,'stp_rad',6X,'stp_tot',8X,'str_col',6X,'str_rad',
     2  6X,'str_tot',/1X,'#    (eV) ',6X,'(eV/mtu)',5X,'(eV/mtu)',
     3  5X,'(eV/mtu)',6X,'(eV**2/mtu)',2X,'(eV**2/mtu)',2X,
     4  '(eV**2/mtu)',/1X,'#',93('-'))
C
      OPEN(14,FILE='RANGEe.tab')
      WRITE(14,1000) MFNAME
      WRITE(14,1401)
 1401 FORMAT(1X,'# PENELOPE >>>  Electron range and macroscopic ',
     1  'cross sections.',/1X,'# ',/1X,
     2  '# tmfp: transport mean free path.',/1X,
     3  '#  STP: stopping power.',/1X,
     4  '#  STR: energy straggling parameter.',/1X,
     5  '#  TAU: stopping time.',/1X,'# ')
      WRITE(14,1402)
 1402 FORMAT(1X,'# 1 mtu = 1 g/cm**2',/1X,'#',/1X,'#   Energy',
     1  8X,'range',6X,'1st tmfp',5X,'2nd tmfp',7X,'STP',10X,'STR',
     2  10X,'TAU',/1X,'#    (eV)',9X,'(mtu)',8X,'(mtu)',8X,'(mtu)',
     3  6X,'(eV/mtu)',4X,'(eV**2/mtu)',5X,'(s)',/1X,'#',91('-'))
C
C  ****  Electron stopping time as a function of energy.
C
      DO I=1,NEGP
        VEL=SQRT(ET(I)*(ET(I)+TREV))/(ET(I)+TREV)
        F1(I)=1.0D0/((CSTPE(M,I)+RSTPE(M,I))*VEL)
      ENDDO
      CALL SPLINE(ET,F1,A,B,C,D,0.0D0,0.0D0,NEGP)
      TAUE(1)=1.0D-35
      DO I=2,NEGP
        XL=ET(I-1)
        XU=ET(I)
        CALL SINTEG(ET,A,B,C,D,XL,XU,DT,NEGP)
        TAUE(I)=TAUE(I-1)+DT/SLCM
      ENDDO
C
      WCRP=10.0D0
      DO IES=1,NIE
        E=ETS(IES)
        IF(E.LT.EL) THEN
          EE=EL
        ELSE IF (E.GT.EU) THEN
          EE=EU
        ELSE
          EE=E
        ENDIF
        XEL=LOG(EE)
        XE=1.0D0+(XEL-DLEMP1)*DLFC
        KE=XE
        IF(KE.LT.1) KE=1
        IF(KE.GE.NEGP) KE=NEGP-1
        XEK=XE-KE
C
        XSEL=EXP(SEHEL(M,KE)+(SEHEL(M,KE+1)-SEHEL(M,KE))*XEK)/VMOL(M)
        XSIN=EXP(SEHIN(M,KE)+(SEHIN(M,KE+1)-SEHIN(M,KE))*XEK)/VMOL(M)
        XSBR=EXP(SEHBR(M,KE)+(SEHBR(M,KE+1)-SEHBR(M,KE))*XEK)/VMOL(M)
        XSSI=EXP(SEISI(M,KE)+(SEISI(M,KE+1)-SEISI(M,KE))*XEK)/VMOL(M)
        XSTOT=XSEL+(XSIN+XSSI)+XSBR
        WRITE(11,'(1X,1P,7E13.5)') E,XSEL,XSIN+XSSI,XSBR,XSTOT,XSSI
C
        FPEL=RHO(M)/(XSEL*VMOL(M))
        FPIN=RHO(M)/((XSIN+XSSI)*VMOL(M))
        FPBR=RHO(M)/(XSBR*VMOL(M))
        FPSI=RHO(M)/(XSSI*VMOL(M))
        FPTOT=RHO(M)/(XSTOT*VMOL(M))
        WRITE(12,'(1X,1P,7E13.5)') E,FPEL,FPIN,FPBR,FPTOT,FPSI
C
        STPC=EXP(LOG(MAX(CSTPE(M,KE),1.0D-35))
     1      +(LOG(MAX(CSTPE(M,KE+1),1.0D-35))
     2      -LOG(MAX(CSTPE(M,KE),1.0D-35)))*XEK)/RHO(M)
        STPR=EXP(LOG(MAX(RSTPE(M,KE),1.0D-35))
     1      +(LOG(MAX(RSTPE(M,KE+1),1.0D-35))
     S      -LOG(MAX(RSTPE(M,KE),1.0D-35)))*XEK)/RHO(M)
        STP=STPC+STPR
        RANGE=PRANGE(E,1,M)*RHO(M)
C
        WCUP=EE*4.0D0
        CALL EINaT(EE,WCUP,XH0,XH1,XH2,XS0,XS1,XS2,XT1,XT2,DELTA,M)
        STPCX=0.0D0
        STRC=0.0D0
        DO KO=1,NOSC(M)
          TCS0=SES0(KO)
          IF(TCS0.GT.1.0D-35) THEN
            IO=ISIE(KO)
            IF(IO.GT.0) THEN
              IF(XSESI(KE+1,IO).GT.1.0D-35) THEN
                SNUM=EXP(LOG(MAX(XSESI(KE,IO),1.0D-35))
     1            +(LOG(MAX(XSESI(KE+1,IO),1.0D-35))
     2            -LOG(MAX(XSESI(KE,IO),1.0D-35)))*XEK)
              ELSE
                SNUM=0.0D0
              ENDIF
            ELSE
              IO=-IO
              IF(XSEIN(KE+1,IO).GT.1.0D-35) THEN
                SNUM=EXP(LOG(MAX(XSEIN(KE,IO),1.0D-35))
     1            +(LOG(MAX(XSEIN(KE+1,IO),1.0D-35))
     2            -LOG(MAX(XSEIN(KE,IO),1.0D-35)))*XEK)
              ELSE
                SNUM=0.0D0
              ENDIF
            ENDIF
            STPCX=STPCX+SES1(KO)*SNUM/TCS0
            STRC=STRC+SES2(KO)*SNUM/TCS0
          ENDIF
        ENDDO
        STPCX=STPCX*VMOL(M)/RHO(M)
        STRC=STRC*VMOL(M)/RHO(M)
C
        CALL EBRaT(E,WCRP,XBH0,XBH1,XBH2,XBS1,XBS2,M)
        STPRX=(XBH1+XBS1)*VMOL(M)/RHO(M)
        FACT2=STPR/STPRX
        STRR=FACT2*(XBH2+XBS2)*VMOL(M)/RHO(M)
        STR=STRC+STRR
        WRITE(13,'(1X,1P,4E13.5,2X,3E13.5)')
     1     E,STPC,STPR,STP,STRC,STRR,STR
C
        T1=EXP(TRL1E(M,KE)+(TRL1E(M,KE+1)-TRL1E(M,KE))*XEK)*RHO(M)
        T2=EXP(TRL2E(M,KE)+(TRL2E(M,KE+1)-TRL2E(M,KE))*XEK)*RHO(M)
        TAU=EXP(LOG(TAUE(KE))+(LOG(TAUE(KE+1))-LOG(TAUE(KE)))*XEK)
        WRITE(14,'(1X,1P,8E13.5)') E,RANGE,T1,T2,STP,STR,TAU
      ENDDO
      CLOSE(11)
      CLOSE(12)
      CLOSE(13)
      CLOSE(14)
C
C  ************  Positrons.
C
      OPEN(21,FILE='TCSp.tab')
      WRITE(21,1000) MFNAME
      WRITE(21,2101)
 2101 FORMAT(1X,'# PENELOPE >>>  Positron cross sections (xs).',/1X,'#',
     1  /1X,'# NOTE: The xs for inner shell ionization (isi) is listed',
     2  ' only for',/1X,'#',7X,'completeness. The xs for inelastic',
     3  ' collisions (in) has been',/1X,'#',7X,'calculated by',
     4  ' considering all inelastic events, including isi.',
     5  /1X,'#',7X,'The bremss (br) xs is for emission of photons with',
     6  ' W >10 eV.')
      WRITE(21,2102)
 2102 FORMAT(1X,'#',/1X,'#   Energy',8X,'xs_el',8X,'xs_in',8X,'xs_br',
     1  7X,'xs_an',8X,'xs_tot',7X,'xs_isi',/1X,'#    (eV) ',7X,
     2  '(cm**2)',6X,'(cm**2)',6X,'(cm**2)',6X,'(cm**2)',6X,'(cm**2)',
     3  6X,'(cm**2)',/1X,'#',91('-'))
C
      OPEN(22,FILE='MFPp.tab')
      WRITE(22,1000) MFNAME
      WRITE(22,2201)
 2201 FORMAT(1X,'# PENELOPE >>>  Positron mean free paths (mfp).',
     1  /1X,'#',/1X,'# NOTE: The mfp for inner shell ionization (isi)',
     2  ' is listed only for',/1X,'#',7X,'completeness. The mfp for ',
     3  'inelastic collisions (in) has been',/1X,'#',7X,'calculated by',
     4  ' considering all inelastic events, including isi.',
     5  /1X,'#',7X,'The bremss (br) mfp is for emission of photons',
     6  ' with W >10 eV.')
      WRITE(22,2202)
 2202 FORMAT(1X,'#',/1X,'#   Energy',7X,'mfp_el',7X,'mfp_in',7X,
     1  'mfp_br',7X,'mfp_an',7X,'mfp_tot',6X,'mfp_isi',/1X,'#    (eV) ',
     2  6X,'(g/cm**2)',4X,'(g/cm**2)',4X,'(g/cm**2)',4X,'(g/cm**2)',4X,
     3  '(g/cm**2)',4X,'(g/cm**2)',/1X,'#',91('-'))
C
      OPEN(23,FILE='STPp.tab')
      WRITE(23,1000) MFNAME
      WRITE(23,2301)
 2301 FORMAT(1X,'# PENELOPE >>>  Positron mass stopping power (stp)',
     1  ' and energy straggling (str).',/1X,'# ')
      WRITE(23,2302)
 2302 FORMAT(1X,'# 1 mtu = 1 g/cm**2',/1X,'# ',/1X,'#   Energy',7X,
     1  'stp_col',6X,'stp_rad',6X,'stp_tot',8X,'str_col',6X,'str_rad',
     2  6X,'str_tot',/1X,'#    (eV) ',6X,'(eV/mtu)',5X,'(eV/mtu)',
     3  5X,'(eV/mtu)',6X,'(eV**2/mtu)',2X,'(eV**2/mtu)',2X,
     4  '(eV**2/mtu)',/1X,'#',93('-'))
C
      OPEN(24,FILE='RANGEp.tab')
      WRITE(24,1000) MFNAME
      WRITE(24,2401)
 2401 FORMAT(1X,'# PENELOPE >>>  Positron range and macroscopic ',
     1  'cross sections.',/1X,'# ',/1X,
     2  '# tmfp: transport mean free path.',/1X,
     3  '#  STP: stopping power.',/1X,
     4  '#  STR: energy straggling parameter.',/1X,
     5  '#  TAU: stopping time.',/1X,'# ')
      WRITE(24,2402)
 2402 FORMAT(1X,'# 1 mtu = 1 g/cm**2',/1X,'#',/1X,'#   Energy',
     1  8X,'range',6X,'1st tmfp',5X,'2nd tmfp',7X,'STP',10X,'STR',
     2  10X,'TAU',/1X,'#    (eV)',9X,'(mtu)',8X,'(mtu)',8X,'(mtu)',
     3  6X,'(eV/mtu)',4X,'(eV**2/mtu)',5X,'(s)',/1X,'#',91('-'))
C
C  ****  Positron stopping time as a function of energy.
C
      DO I=1,NEGP
        VEL=SQRT(ET(I)*(ET(I)+TREV))/(ET(I)+TREV)
        F1(I)=1.0D0/((CSTPP(M,I)+RSTPP(M,I))*VEL)
      ENDDO
      CALL SPLINE(ET,F1,A,B,C,D,0.0D0,0.0D0,NEGP)
      TAUP(1)=1.0D-35
      DO I=2,NEGP
        XL=ET(I-1)
        XU=ET(I)
        CALL SINTEG(ET,A,B,C,D,XL,XU,DT,NEGP)
        TAUP(I)=TAUP(I-1)+DT/SLCM
      ENDDO
C
      DO IES=1,NIE
        E=ETS(IES)
        IF(E.LT.EL) THEN
          EE=EL
        ELSE IF (E.GT.EU) THEN
          EE=EU
        ELSE
          EE=E
        ENDIF
        XEL=LOG(EE)
        XE=1.0D0+(XEL-DLEMP1)*DLFC
        KE=XE
        IF(KE.LT.1) KE=1
        IF(KE.GE.NEGP) KE=NEGP-1
        XEK=XE-KE
C
        XSEL=EXP(SPHEL(M,KE)+(SPHEL(M,KE+1)-SPHEL(M,KE))*XEK)/VMOL(M)
        XSIN=EXP(SPHIN(M,KE)+(SPHIN(M,KE+1)-SPHIN(M,KE))*XEK)/VMOL(M)
        XSBR=EXP(SPHBR(M,KE)+(SPHBR(M,KE+1)-SPHBR(M,KE))*XEK)/VMOL(M)
        XSSI=EXP(SPISI(M,KE)+(SPISI(M,KE+1)-SPISI(M,KE))*XEK)/VMOL(M)
        XSAN=EXP(SPAN(M,KE)+(SPAN(M,KE+1)-SPAN(M,KE))*XEK)/VMOL(M)
        XSTOT=XSEL+(XSIN+XSSI)+XSBR+XSAN
        WRITE(21,'(1X,1P,7E13.5)') E,XSEL,XSIN+XSSI,XSBR,XSAN,XSTOT,XSSI
        FPEL=RHO(M)/(XSEL*VMOL(M))
        FPIN=RHO(M)/((XSIN+XSSI)*VMOL(M))
        FPBR=RHO(M)/(XSBR*VMOL(M))
        FPAN=RHO(M)/(XSAN*VMOL(M))
        FPSI=RHO(M)/(XSSI*VMOL(M))
        FPTOT=RHO(M)/(XSTOT*VMOL(M))
        WRITE(22,'(1X,1P,7E13.5)') E,FPEL,FPIN,FPBR,FPAN,FPTOT,FPSI
C
        STPC=EXP(LOG(MAX(CSTPP(M,KE),1.0D-35))
     1      +(LOG(MAX(CSTPP(M,KE+1),1.0D-35))
     2      -LOG(MAX(CSTPP(M,KE),1.0D-35)))*XEK)/RHO(M)
        STPR=EXP(LOG(MAX(RSTPP(M,KE),1.0D-35))
     1      +(LOG(MAX(RSTPP(M,KE+1),1.0D-35))
     S      -LOG(MAX(RSTPP(M,KE),1.0D-35)))*XEK)/RHO(M)
        STP=STPC+STPR
        RANGE=PRANGE(E,3,M)*RHO(M)
C
        WCUP=EE*4.0D0
        CALL PINaT(EE,WCUP,XH0,XH1,XH2,XS0,XS1,XS2,XT1,XT2,DELTA,M)
        STPCX=0.0D0
        STRC=0.0D0
        DO KO=1,NOSC(M)
          TCS0=SPS0(KO)
          IF(TCS0.GT.1.0D-35) THEN
            IO=ISIP(KO)
            IF(IO.GT.0) THEN
              IF(XSPSI(KE+1,IO).GT.1.0D-35) THEN
                SNUM=EXP(LOG(MAX(XSPSI(KE,IO),1.0D-35))
     1            +(LOG(MAX(XSPSI(KE+1,IO),1.0D-35))
     2            -LOG(MAX(XSPSI(KE,IO),1.0D-35)))*XEK)
              ELSE
                SNUM=0.0D0
              ENDIF
            ELSE
              IO=-IO
              IF(XSPIN(KE+1,IO).GT.1.0D-35) THEN
                SNUM=EXP(LOG(MAX(XSPIN(KE,IO),1.0D-35))
     1            +(LOG(MAX(XSPIN(KE+1,IO),1.0D-35))
     2            -LOG(MAX(XSPIN(KE,IO),1.0D-35)))*XEK)
              ELSE
                SNUM=0.0D0
              ENDIF
            ENDIF
            STPCX=STPCX+SPS1(KO)*SNUM/TCS0
            STRC=STRC+SPS2(KO)*SNUM/TCS0
          ENDIF
        ENDDO
        STPCX=STPCX*VMOL(M)/RHO(M)
        STRC=STRC*VMOL(M)/RHO(M)
C
        CALL PBRaT(E,WCRP,XBH0,XBH1,XBH2,XBS1,XBS2,M)
        STPRX=(XBH1+XBS1)*VMOL(M)/RHO(M)
        FACT2=STPR/STPRX
        STRR=FACT2*(XBH2+XBS2)*VMOL(M)/RHO(M)
        STR=STRC+STRR
        WRITE(23,'(1X,1P,4E13.5,2X,3E13.5)')
     1     E,STPC,STPR,STP,STRC,STRR,STR
C
        T1=EXP(TRL1P(M,KE)+(TRL1P(M,KE+1)-TRL1P(M,KE))*XEK)*RHO(M)
        T2=EXP(TRL2P(M,KE)+(TRL2P(M,KE+1)-TRL2P(M,KE))*XEK)*RHO(M)
        TAU=EXP(LOG(TAUP(KE))+(LOG(TAUP(KE+1))-LOG(TAUP(KE)))*XEK)
        WRITE(24,'(1X,1P,8E13.5)') E,RANGE,T1,T2,STP,STR,TAU
      ENDDO
      CLOSE(21)
      CLOSE(22)
      CLOSE(23)
      CLOSE(24)
C
C  ****  Radiative yields of electrons and positrons.
C
      OPEN(31,FILE='RYIELDep.tab')
      WRITE(31,1000) MFNAME
      WRITE(31,3101)
 3101 FORMAT(1X,'# PENELOPE >>>  Radiative yields of electrons '
     1  'and positrons.'/1X,'#')
      WRITE(31,3102)
 3102 FORMAT(1X,'#   Energy',8X,'Radiative yields',/1X,'#    (eV)',
     1  7X,'electron',5X,'positron',/1X,'#',39('-'))
C  ****  Electrons.
      DO I=1,NEGP
        FL(I)=RSTPE(M,I)/(CSTPE(M,I)+RSTPE(M,I))
      ENDDO
      ERADY(1)=0.0D0
      DO I=2,NIE
        XL=ETS(I-1)
        XU=ETS(I)
        IF(XL.GT.ET(1)) THEN
          ERADY(I)=ERADY(I-1)+RMOMX(ET,FL,XL,XU,NEGP,0)
        ELSE
          ERADY(I)=ERADY(I-1)
        ENDIF
      ENDDO
C  ****  Positrons.
      DO I=1,NEGP
        FL(I)=RSTPP(M,I)/(CSTPP(M,I)+RSTPP(M,I))
      ENDDO
      PRADY(1)=0.0D0
      DO I=2,NIE
        XL=ETS(I-1)
        XU=ETS(I)
        IF(XL.GT.ET(1)) THEN
          PRADY(I)=PRADY(I-1)+RMOMX(ET,FL,XL,XU,NEGP,0)
        ELSE
          PRADY(I)=PRADY(I-1)
        ENDIF
      ENDDO
C
      DO I=1,NIE
        WRITE(31,'(1X,1P,7E13.5)')
     1    ETS(I),ERADY(I)/ETS(I),PRADY(I)/ETS(I)
      ENDDO
      CLOSE(31)
C
      RETURN
      END

C  *********************************************************************
C                       SUBROUTINE EPRSTP
C  *********************************************************************
      SUBROUTINE EPRSTP(WCCM,MFNAME)
C
C  This subroutine calculates and prints a table of restricted collision
C  stopping powers of electrons and positrons.
C
      USE PENELOPE_mod
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z), INTEGER*4 (I-N)
      CHARACTER MFNAME*20
C  ****  Energy grid and interpolation constants for the current energy.
      COMMON/CEGRID/EMIN,EL,EU,ET(NEGP),DLEMP(NEGP),DLEMP1,DLFC,
     1  XEL,XE,XEK,KE
C  ****  Composition data.
      COMMON/COMPOS/STF(MAXMAT,30),ZT(MAXMAT),AT(MAXMAT),RHO(MAXMAT),
     1  VMOL(MAXMAT),IZ(MAXMAT,30),NELEM(MAXMAT)
C  ****  E/P inelastic collisions.
      PARAMETER (NO=512)
      COMMON/CEIN/EXPOT(MAXMAT),OP2(MAXMAT),F(MAXMAT,NO),UI(MAXMAT,NO),
     1  WRI(MAXMAT,NO),KZ(MAXMAT,NO),KS(MAXMAT,NO),NOSC(MAXMAT)
C  ****  Partial cross sections of individual shells/oscillators.
      COMMON/CEIN00/SEH0(NO),SEH1(NO),SEH2(NO),SES0(NO),SES1(NO),
     1              SES2(NO),SET0(NO),SET1(NO),SET2(NO)
      COMMON/CPIN00/SPH0(NO),SPH1(NO),SPH2(NO),SPS0(NO),SPS1(NO),
     1              SPS2(NO),SPT0(NO),SPT1(NO),SPT2(NO)
C  ****  Electron inelastic coll. and inner-shell ionization tables.
      COMMON/CESIN/XSEIN(NEGP,NO),XSESI(NEGP,NO),ISIE(NO)
C  ****  Positron inelastic coll. and inner-shell ionization tables.
      COMMON/CPSIN/XSPIN(NEGP,NO),XSPSI(NEGP,NO),ISIP(NO)
C
      DIMENSION ETS(500)
C
      PARAMETER (NEGRD=51)
      DIMENSION EGRD(NEGRD)
      DATA EGRD/  1.00E+00, 1.05E+00, 1.10E+00, 1.15E+00, 1.20E+00,
     1  1.25E+00, 1.30E+00, 1.35E+00, 1.40E+00, 1.50E+00, 1.60E+00,
     1  1.70E+00, 1.80E+00, 1.90E+00, 2.00E+00, 2.10E+00, 2.20E+00,
     1  2.30E+00, 2.40E+00, 2.50E+00, 2.60E+00, 2.70E+00, 2.80E+00,
     1  2.90E+00, 3.00E+00, 3.20E+00, 3.40E+00, 3.60E+00, 3.80E+00,
     1  4.00E+00, 4.20E+00, 4.40E+00, 4.60E+00, 4.80E+00, 5.00E+00,
     1  5.25E+00, 5.50E+00, 5.75E+00, 6.00E+00, 6.25E+00, 6.50E+00,
     1  6.75E+00, 7.00E+00, 7.25E+00, 7.50E+00, 7.75E+00, 8.00E+00,
     1  8.50E+00, 9.00E+00, 9.50E+00, 1.00E+01/
C
C  ****  Energy mesh points (in eV).
C
      NIE=0
      IGRID=34
      FGRID=10.0D0
   10 IGRID=IGRID+1
      EV=EGRD(IGRID)*FGRID
      IF(IGRID.EQ.NEGRD) THEN
        IGRID=1
        FGRID=10.0D0*FGRID
      ENDIF
      NIE=NIE+1
      ETS(NIE)=EV
      IF(EV.LT.0.9999D9) GO TO 10
C
      M=1
C
C  ****  Stopping powers.
C
      OPEN(14,FILE='RestrictedSTPep.tab')
      WRITE(14,1000) MFNAME
 1000 FORMAT(1X,'# Material data file: ',A20,/1x,'# ')
      WRITE(14,1401)
 1401 FORMAT(1X,'# PENELOPE >>>  Restricted collision stopping power ',
     1  '(rstp) and',/1X,'#',15X,'collision stopping power (stp) of',
     2  ' electrons and positrons.',/1X,'#')
      WRITE(14,1402) WCCM
 1402 FORMAT(1X,'#  1 mtu = 1 g/cm**2',10X,'Cut-off energy, Wcc =',
     1  1P,E12.5,' eV',/1X,'#',/1X,'#   Energy',
     1  7X,'rstp_el',6X,'stp_el',8X,'ratio',9X,'rstp_po',6X,'stp_po',
     1  8X,'ratio',/1X,'#    (eV) ',6X,'(eV/mtu)',5X,'(eV/mtu)',
     1  20X,'(eV/mtu)',5X,'(eV/mtu)',6X,/1X,'#',93('-'))
C
      DO IE=1,NIE
        EE=ETS(IE)
        XEL=LOG(EE)
        XE=1.0D0+(XEL-DLEMP1)*DLFC
        KE=XE
        IF(KE.LT.1) KE=1
        IF(KE.GE.NEGP) KE=NEGP-1
        XEK=XE-KE
C
        CALL EINaT(EE,WCCM,XH0,XH1,XH2,XS0,XS1,XS2,XT1,XT2,DELTA,M)
        ESTP=0.0D0
        ERSTP=0.0D0
        DO KO=1,NOSC(M)
          TCS0=SES0(KO)+SEH0(KO)
          IF(TCS0.GT.1.0D-35) THEN
            IO=ISIE(KO)
            IF(IO.GT.0) THEN
              IF(XSESI(KE+1,IO).GT.1.0D-35) THEN
                SNUM=EXP(LOG(MAX(XSESI(KE,IO),1.0D-35))
     1            +(LOG(MAX(XSESI(KE+1,IO),1.0D-35))
     2            -LOG(MAX(XSESI(KE,IO),1.0D-35)))*XEK)
              ELSE
                SNUM=0.0D0
              ENDIF
            ELSE
              IO=-IO
              IF(XSEIN(KE+1,IO).GT.1.0D-35) THEN
                SNUM=EXP(LOG(MAX(XSEIN(KE,IO),1.0D-35))
     1            +(LOG(MAX(XSEIN(KE+1,IO),1.0D-35))
     2            -LOG(MAX(XSEIN(KE,IO),1.0D-35)))*XEK)
              ELSE
                SNUM=0.0D0
              ENDIF
            ENDIF
            ESTP=ESTP+(SES1(KO)+SEH1(KO))*SNUM/TCS0
            ERSTP=ERSTP+SES1(KO)*SNUM/TCS0
          ENDIF
        ENDDO
        ESTP=ESTP*VMOL(M)/RHO(M)
        ERSTP=ERSTP*VMOL(M)/RHO(M)
C
        CALL PINaT(EE,WCCM,XH0,XH1,XH2,XS0,XS1,XS2,XT1,XT2,DELTA,M)
        PSTP=0.0D0
        PRSTP=0.0D0
        DO KO=1,NOSC(M)
          TCS0=SPS0(KO)+SPH0(KO)
          IF(TCS0.GT.1.0D-35) THEN
            IO=ISIP(KO)
            IF(IO.GT.0) THEN
              IF(XSPSI(KE+1,IO).GT.1.0D-35) THEN
                SNUM=EXP(LOG(MAX(XSPSI(KE,IO),1.0D-35))
     1            +(LOG(MAX(XSPSI(KE+1,IO),1.0D-35))
     2            -LOG(MAX(XSPSI(KE,IO),1.0D-35)))*XEK)
              ELSE
                SNUM=0.0D0
              ENDIF
            ELSE
              IO=-IO
              IF(XSPIN(KE+1,IO).GT.1.0D-35) THEN
                SNUM=EXP(LOG(MAX(XSPIN(KE,IO),1.0D-35))
     1            +(LOG(MAX(XSPIN(KE+1,IO),1.0D-35))
     2            -LOG(MAX(XSPIN(KE,IO),1.0D-35)))*XEK)
              ELSE
                SNUM=0.0D0
              ENDIF
            ENDIF
            PSTP=PSTP+(SPS1(KO)+SPH1(KO))*SNUM/TCS0
            PRSTP=PRSTP+SPS1(KO)*SNUM/TCS0
          ENDIF
        ENDDO
        PSTP=PSTP*VMOL(M)/RHO(M)
        PRSTP=PRSTP*VMOL(M)/RHO(M)
C
        WRITE(14,'(1X,1P,4E13.5,2X,3E13.5)')
     1    EE,ERSTP,ESTP,ERSTP/ESTP,PRSTP,PSTP,PRSTP/PSTP
      ENDDO
      CLOSE(14)
C
      RETURN
      END
